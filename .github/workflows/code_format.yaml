name: Format code # ワークフローの名前を指定

on: # トリガー条件を指定
  pull_request: # プルリクエストに反応
    types: [opened, synchronize] # プルリクエストがオープン、更新された場合にトリガー

jobs: # ジョブの定義を開始
  formatter: # ジョブ名を指定
    name: formatter # ジョブの名前

    runs-on: ubuntu-latest # Ubuntu Linux 上で実行

    permissions:
      contents: write # コンテンツに対する書き込み権限を設定

    steps: # ジョブ内のステップの定義を開始
      - name: Checkout Repository # リポジトリのチェックアウト
        uses: actions/checkout@v4 # GitHubリポジトリからコードをチェックアウト
        # with:
        #   ref: ${{ github.head_ref }} # GitHubヘッドリファレンスを指定

      # 環境変数を読み込む
      - name: Load environment variables
        run: |
          for s in $(yq e ".env" -o=j .github/workflows/env.yaml | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]"); do
            echo $s >> $GITHUB_ENV
          done
      # env.XXX can be used in the following steps

      - name: Set up Python ${{ env.PYTHON_VERSION }} # Python環境のセットアップ
        uses: actions/setup-python@v4 # Python環境のセットアップアクションを使用
        with:
          python-version: ${{ env.PYTHON_VERSION }} # マトリクスで指定されたPythonバージョンを使用

      - name: Install Dependencies # 依存関係のインストール
        run: |
          python -m pip install --upgrade pip # pipをアップグレード
          pip install autoflake black isort # autoflake、black、isortをインストール

      - name: autoflake # autoflakeを使用してコードを修正
        run: autoflake -r .

      - name: black # blackを使用してコードをフォーマット
        run: black . --skip-string-normalization --check --diff

      - name: isort # isortを使用してインポートステートメントを整理
        run: isort . --check-only